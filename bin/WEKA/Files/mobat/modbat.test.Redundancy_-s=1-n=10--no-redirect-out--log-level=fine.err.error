[ERROR] java.lang.AssertionError: assertion failed
[ERROR] 	at scala.Predef$.assert(Predef.scala)
[ERROR] 	at modbat.dsl.Model$.assert(Model.scala)
[ERROR] 	at modbat.dsl.Model$class.assert(Model.scala)
[ERROR] 	at modbat.test.Redundancy.assert(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply$mcV$sp(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply(Redundancy.scala)
[ERROR] java.lang.AssertionError: assertion failed
[ERROR] 	at scala.Predef$.assert(Predef.scala)
[ERROR] 	at modbat.dsl.Model$.assert(Model.scala)
[ERROR] 	at modbat.dsl.Model$class.assert(Model.scala)
[ERROR] 	at modbat.test.Redundancy.assert(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply$mcV$sp(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply(Redundancy.scala)
[ERROR] java.lang.AssertionError: assertion failed
[ERROR] 	at scala.Predef$.assert(Predef.scala)
[ERROR] 	at modbat.dsl.Model$.assert(Model.scala)
[ERROR] 	at modbat.dsl.Model$class.assert(Model.scala)
[ERROR] 	at modbat.test.Redundancy.assert(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply$mcV$sp(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply(Redundancy.scala)
[ERROR] java.lang.AssertionError: assertion failed
[ERROR] 	at scala.Predef$.assert(Predef.scala)
[ERROR] 	at modbat.dsl.Model$.assert(Model.scala)
[ERROR] 	at modbat.dsl.Model$class.assert(Model.scala)
[ERROR] 	at modbat.test.Redundancy.assert(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply$mcV$sp(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply(Redundancy.scala)
[ERROR] java.lang.AssertionError: assertion failed
[ERROR] 	at scala.Predef$.assert(Predef.scala)
[ERROR] 	at modbat.dsl.Model$.assert(Model.scala)
[ERROR] 	at modbat.dsl.Model$class.assert(Model.scala)
[ERROR] 	at modbat.test.Redundancy.assert(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply$mcV$sp(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply(Redundancy.scala)
[ERROR] 	at modbat.test.Redundancy$$anonfun$5.apply(Redundancy.scala)
